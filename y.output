   0  $accept : prog $end

   1  prog : ID '{' bloque '}'

   2  bloque :
   3         | bloque sentencia

   4  bloque_ejec :
   5              | bloque_ejec sentencia_ejec

   6  sentencia : sentencia_decl
   7            | sentencia_ejec
   8            | funcion

   9  sentencia_decl : declaracion ';'

  10  sentencia_ejec : asign_simple ';'
  11                 | asign_multiple ';'
  12                 | bloque_if
  13                 | bloque_for
  14                 | print_sent
  15                 | llamada_funcion ';'
  16                 | return_sent

  17  declaracion : INT lista_ids

  18  var_ref : ID
  19          | ID '.' ID

  20  lista_ids : var_ref
  21            | lista_ids ',' var_ref

  22  asign_simple : var_ref ":=" expresion

  23  asign_multiple : lista_ids '=' lista_ctes

  24  lista_ctes : cte
  25             | lista_ctes ',' cte

  26  cte : CTE

  27  expresion : expresion '+' termino
  28            | expresion '-' termino
  29            | termino

  30  termino : termino '*' factor
  31          | termino '/' factor
  32          | factor

  33  factor : var_ref
  34         | llamada_funcion
  35         | cte

  36  llamada_funcion : ID '(' lista_params_reales_opt ')'

  37  lista_params_reales_opt :
  38                          | lista_params_reales

  39  lista_params_reales : param_real_map
  40                      | lista_params_reales ',' param_real_map

  41  param_real_map : parametro_real "->" ID

  42  parametro_real : expresion
  43                 | TRUNC '(' expresion ')'
  44                 | lambda_expr

  45  return_sent : RETURN '(' expresion ')' ';'

  46  funcion : INT ID '(' lista_params_formales ')' '{' cuerpo_funcion '}'

  47  lista_params_formales : param_formal
  48                        | lista_params_formales ',' param_formal

  49  param_formal : sem_pasaje_opt INT ID

  50  sem_pasaje_opt :
  51                 | CV

  52  cuerpo_funcion : cuerpo_funcion_items

  53  cuerpo_funcion_items :
  54                       | cuerpo_funcion_items cuerpo_item

  55  cuerpo_item : sentencia_decl
  56              | sentencia_ejec

  57  bloque_if : IF '(' condicion ')' rama_if opt_else ENDIF ';'

  58  condicion : expresion relop expresion

  59  relop : '<'
  60        | '>'
  61        | IGUAL
  62        | DISTINTO
  63        | MENORIGUAL
  64        | MAYORIGUAL

  65  rama_if : sentencia_ejec
  66          | '{' bloque_ejec '}'

  67  opt_else :
  68           | ELSE rama_if

  69  bloque_for : FOR '(' ID FROM CTE TO CTE ')' rama_for ';'

  70  rama_for : sentencia_ejec
  71           | '{' bloque_ejec '}'

  72  print_sent : PRINT '(' CADENA ')' ';'
  73             | PRINT '(' expresion ')' ';'

  74  lambda_expr : '(' INT ID ')' '{' bloque_ejec '}' '(' argumento ')'

  75  argumento : ID
  76            | CTE

state 0
	$accept : . prog $end  (0)

	ID  shift 1
	.  error

	prog  goto 2


state 1
	prog : ID . '{' bloque '}'  (1)

	'{'  shift 3
	.  error


state 2
	$accept : prog . $end  (0)

	$end  accept


state 3
	prog : ID '{' . bloque '}'  (1)
	bloque : .  (2)

	.  reduce 2

	bloque  goto 4


state 4
	prog : ID '{' bloque . '}'  (1)
	bloque : bloque . sentencia  (3)

	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	INT  shift 8
	FOR  shift 9
	ID  shift 10
	'}'  shift 11
	.  error

	sentencia  goto 12
	sentencia_ejec  goto 13
	sentencia_decl  goto 14
	funcion  goto 15
	declaracion  goto 16
	asign_simple  goto 17
	asign_multiple  goto 18
	bloque_if  goto 19
	bloque_for  goto 20
	print_sent  goto 21
	llamada_funcion  goto 22
	return_sent  goto 23
	lista_ids  goto 24
	var_ref  goto 25


state 5
	bloque_if : IF . '(' condicion ')' rama_if opt_else ENDIF ';'  (57)

	'('  shift 26
	.  error


state 6
	print_sent : PRINT . '(' CADENA ')' ';'  (72)
	print_sent : PRINT . '(' expresion ')' ';'  (73)

	'('  shift 27
	.  error


state 7
	return_sent : RETURN . '(' expresion ')' ';'  (45)

	'('  shift 28
	.  error


state 8
	declaracion : INT . lista_ids  (17)
	funcion : INT . ID '(' lista_params_formales ')' '{' cuerpo_funcion '}'  (46)

	ID  shift 29
	.  error

	lista_ids  goto 30
	var_ref  goto 31


state 9
	bloque_for : FOR . '(' ID FROM CTE TO CTE ')' rama_for ';'  (69)

	'('  shift 32
	.  error


state 10
	var_ref : ID .  (18)
	var_ref : ID . '.' ID  (19)
	llamada_funcion : ID . '(' lista_params_reales_opt ')'  (36)

	'.'  shift 33
	'('  shift 34
	IGUAL  reduce 18
	DISTINTO  reduce 18
	MENORIGUAL  reduce 18
	MAYORIGUAL  reduce 18
	'+'  reduce 18
	'-'  reduce 18
	'*'  reduce 18
	'/'  reduce 18
	';'  reduce 18
	','  reduce 18
	":="  reduce 18
	'='  reduce 18
	')'  reduce 18
	"->"  reduce 18
	'<'  reduce 18
	'>'  reduce 18


state 11
	prog : ID '{' bloque '}' .  (1)

	.  reduce 1


state 12
	bloque : bloque sentencia .  (3)

	.  reduce 3


state 13
	sentencia : sentencia_ejec .  (7)

	.  reduce 7


state 14
	sentencia : sentencia_decl .  (6)

	.  reduce 6


state 15
	sentencia : funcion .  (8)

	.  reduce 8


state 16
	sentencia_decl : declaracion . ';'  (9)

	';'  shift 35
	.  error


state 17
	sentencia_ejec : asign_simple . ';'  (10)

	';'  shift 36
	.  error


state 18
	sentencia_ejec : asign_multiple . ';'  (11)

	';'  shift 37
	.  error


state 19
	sentencia_ejec : bloque_if .  (12)

	.  reduce 12


state 20
	sentencia_ejec : bloque_for .  (13)

	.  reduce 13


state 21
	sentencia_ejec : print_sent .  (14)

	.  reduce 14


state 22
	sentencia_ejec : llamada_funcion . ';'  (15)

	';'  shift 38
	.  error


state 23
	sentencia_ejec : return_sent .  (16)

	.  reduce 16


state 24
	lista_ids : lista_ids . ',' var_ref  (21)
	asign_multiple : lista_ids . '=' lista_ctes  (23)

	','  shift 39
	'='  shift 40
	.  error


state 25
	lista_ids : var_ref .  (20)
	asign_simple : var_ref . ":=" expresion  (22)

	":="  shift 41
	','  reduce 20
	'='  reduce 20


state 26
	bloque_if : IF '(' . condicion ')' rama_if opt_else ENDIF ';'  (57)

	ID  shift 10
	CTE  shift 42
	.  error

	llamada_funcion  goto 43
	var_ref  goto 44
	expresion  goto 45
	cte  goto 46
	termino  goto 47
	factor  goto 48
	condicion  goto 49


state 27
	print_sent : PRINT '(' . CADENA ')' ';'  (72)
	print_sent : PRINT '(' . expresion ')' ';'  (73)

	ID  shift 10
	CTE  shift 42
	CADENA  shift 50
	.  error

	llamada_funcion  goto 43
	var_ref  goto 44
	expresion  goto 51
	cte  goto 46
	termino  goto 47
	factor  goto 48


state 28
	return_sent : RETURN '(' . expresion ')' ';'  (45)

	ID  shift 10
	CTE  shift 42
	.  error

	llamada_funcion  goto 43
	var_ref  goto 44
	expresion  goto 52
	cte  goto 46
	termino  goto 47
	factor  goto 48


state 29
	var_ref : ID .  (18)
	var_ref : ID . '.' ID  (19)
	funcion : INT ID . '(' lista_params_formales ')' '{' cuerpo_funcion '}'  (46)

	'.'  shift 33
	'('  shift 53
	';'  reduce 18
	','  reduce 18


state 30
	declaracion : INT lista_ids .  (17)
	lista_ids : lista_ids . ',' var_ref  (21)

	','  shift 39
	';'  reduce 17


state 31
	lista_ids : var_ref .  (20)

	.  reduce 20


state 32
	bloque_for : FOR '(' . ID FROM CTE TO CTE ')' rama_for ';'  (69)

	ID  shift 54
	.  error


state 33
	var_ref : ID '.' . ID  (19)

	ID  shift 55
	.  error


state 34
	llamada_funcion : ID '(' . lista_params_reales_opt ')'  (36)
	lista_params_reales_opt : .  (37)

	TRUNC  shift 56
	ID  shift 10
	CTE  shift 42
	'('  shift 57
	')'  reduce 37

	llamada_funcion  goto 43
	var_ref  goto 44
	expresion  goto 58
	cte  goto 46
	termino  goto 47
	factor  goto 48
	lista_params_reales_opt  goto 59
	lista_params_reales  goto 60
	param_real_map  goto 61
	parametro_real  goto 62
	lambda_expr  goto 63


state 35
	sentencia_decl : declaracion ';' .  (9)

	.  reduce 9


state 36
	sentencia_ejec : asign_simple ';' .  (10)

	.  reduce 10


state 37
	sentencia_ejec : asign_multiple ';' .  (11)

	.  reduce 11


state 38
	sentencia_ejec : llamada_funcion ';' .  (15)

	.  reduce 15


state 39
	lista_ids : lista_ids ',' . var_ref  (21)

	ID  shift 64
	.  error

	var_ref  goto 65


state 40
	asign_multiple : lista_ids '=' . lista_ctes  (23)

	CTE  shift 42
	.  error

	lista_ctes  goto 66
	cte  goto 67


state 41
	asign_simple : var_ref ":=" . expresion  (22)

	ID  shift 10
	CTE  shift 42
	.  error

	llamada_funcion  goto 43
	var_ref  goto 44
	expresion  goto 68
	cte  goto 46
	termino  goto 47
	factor  goto 48


state 42
	cte : CTE .  (26)

	.  reduce 26


state 43
	factor : llamada_funcion .  (34)

	.  reduce 34


state 44
	factor : var_ref .  (33)

	.  reduce 33


state 45
	expresion : expresion . '+' termino  (27)
	expresion : expresion . '-' termino  (28)
	condicion : expresion . relop expresion  (58)

	IGUAL  shift 69
	DISTINTO  shift 70
	MENORIGUAL  shift 71
	MAYORIGUAL  shift 72
	'+'  shift 73
	'-'  shift 74
	'<'  shift 75
	'>'  shift 76
	.  error

	relop  goto 77


state 46
	factor : cte .  (35)

	.  reduce 35


state 47
	expresion : termino .  (29)
	termino : termino . '*' factor  (30)
	termino : termino . '/' factor  (31)

	'*'  shift 78
	'/'  shift 79
	IGUAL  reduce 29
	DISTINTO  reduce 29
	MENORIGUAL  reduce 29
	MAYORIGUAL  reduce 29
	'+'  reduce 29
	'-'  reduce 29
	';'  reduce 29
	')'  reduce 29
	"->"  reduce 29
	'<'  reduce 29
	'>'  reduce 29


state 48
	termino : factor .  (32)

	.  reduce 32


state 49
	bloque_if : IF '(' condicion . ')' rama_if opt_else ENDIF ';'  (57)

	')'  shift 80
	.  error


state 50
	print_sent : PRINT '(' CADENA . ')' ';'  (72)

	')'  shift 81
	.  error


state 51
	expresion : expresion . '+' termino  (27)
	expresion : expresion . '-' termino  (28)
	print_sent : PRINT '(' expresion . ')' ';'  (73)

	'+'  shift 73
	'-'  shift 74
	')'  shift 82
	.  error


state 52
	expresion : expresion . '+' termino  (27)
	expresion : expresion . '-' termino  (28)
	return_sent : RETURN '(' expresion . ')' ';'  (45)

	'+'  shift 73
	'-'  shift 74
	')'  shift 83
	.  error


state 53
	funcion : INT ID '(' . lista_params_formales ')' '{' cuerpo_funcion '}'  (46)
	sem_pasaje_opt : .  (50)

	CV  shift 84
	INT  reduce 50

	lista_params_formales  goto 85
	param_formal  goto 86
	sem_pasaje_opt  goto 87


state 54
	bloque_for : FOR '(' ID . FROM CTE TO CTE ')' rama_for ';'  (69)

	FROM  shift 88
	.  error


state 55
	var_ref : ID '.' ID .  (19)

	.  reduce 19


state 56
	parametro_real : TRUNC . '(' expresion ')'  (43)

	'('  shift 89
	.  error


state 57
	lambda_expr : '(' . INT ID ')' '{' bloque_ejec '}' '(' argumento ')'  (74)

	INT  shift 90
	.  error


state 58
	expresion : expresion . '+' termino  (27)
	expresion : expresion . '-' termino  (28)
	parametro_real : expresion .  (42)

	'+'  shift 73
	'-'  shift 74
	"->"  reduce 42


state 59
	llamada_funcion : ID '(' lista_params_reales_opt . ')'  (36)

	')'  shift 91
	.  error


state 60
	lista_params_reales_opt : lista_params_reales .  (38)
	lista_params_reales : lista_params_reales . ',' param_real_map  (40)

	','  shift 92
	')'  reduce 38


state 61
	lista_params_reales : param_real_map .  (39)

	.  reduce 39


state 62
	param_real_map : parametro_real . "->" ID  (41)

	"->"  shift 93
	.  error


state 63
	parametro_real : lambda_expr .  (44)

	.  reduce 44


state 64
	var_ref : ID .  (18)
	var_ref : ID . '.' ID  (19)

	'.'  shift 33
	';'  reduce 18
	','  reduce 18
	'='  reduce 18


state 65
	lista_ids : lista_ids ',' var_ref .  (21)

	.  reduce 21


state 66
	asign_multiple : lista_ids '=' lista_ctes .  (23)
	lista_ctes : lista_ctes . ',' cte  (25)

	','  shift 94
	';'  reduce 23


state 67
	lista_ctes : cte .  (24)

	.  reduce 24


state 68
	asign_simple : var_ref ":=" expresion .  (22)
	expresion : expresion . '+' termino  (27)
	expresion : expresion . '-' termino  (28)

	'+'  shift 73
	'-'  shift 74
	';'  reduce 22


state 69
	relop : IGUAL .  (61)

	.  reduce 61


state 70
	relop : DISTINTO .  (62)

	.  reduce 62


state 71
	relop : MENORIGUAL .  (63)

	.  reduce 63


state 72
	relop : MAYORIGUAL .  (64)

	.  reduce 64


state 73
	expresion : expresion '+' . termino  (27)

	ID  shift 10
	CTE  shift 42
	.  error

	llamada_funcion  goto 43
	var_ref  goto 44
	cte  goto 46
	termino  goto 95
	factor  goto 48


state 74
	expresion : expresion '-' . termino  (28)

	ID  shift 10
	CTE  shift 42
	.  error

	llamada_funcion  goto 43
	var_ref  goto 44
	cte  goto 46
	termino  goto 96
	factor  goto 48


state 75
	relop : '<' .  (59)

	.  reduce 59


state 76
	relop : '>' .  (60)

	.  reduce 60


state 77
	condicion : expresion relop . expresion  (58)

	ID  shift 10
	CTE  shift 42
	.  error

	llamada_funcion  goto 43
	var_ref  goto 44
	expresion  goto 97
	cte  goto 46
	termino  goto 47
	factor  goto 48


state 78
	termino : termino '*' . factor  (30)

	ID  shift 10
	CTE  shift 42
	.  error

	llamada_funcion  goto 43
	var_ref  goto 44
	cte  goto 46
	factor  goto 98


state 79
	termino : termino '/' . factor  (31)

	ID  shift 10
	CTE  shift 42
	.  error

	llamada_funcion  goto 43
	var_ref  goto 44
	cte  goto 46
	factor  goto 99


state 80
	bloque_if : IF '(' condicion ')' . rama_if opt_else ENDIF ';'  (57)

	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	FOR  shift 9
	ID  shift 10
	'{'  shift 100
	.  error

	sentencia_ejec  goto 101
	asign_simple  goto 17
	asign_multiple  goto 18
	bloque_if  goto 19
	bloque_for  goto 20
	print_sent  goto 21
	llamada_funcion  goto 22
	return_sent  goto 23
	lista_ids  goto 24
	var_ref  goto 25
	rama_if  goto 102


state 81
	print_sent : PRINT '(' CADENA ')' . ';'  (72)

	';'  shift 103
	.  error


state 82
	print_sent : PRINT '(' expresion ')' . ';'  (73)

	';'  shift 104
	.  error


state 83
	return_sent : RETURN '(' expresion ')' . ';'  (45)

	';'  shift 105
	.  error


state 84
	sem_pasaje_opt : CV .  (51)

	.  reduce 51


state 85
	funcion : INT ID '(' lista_params_formales . ')' '{' cuerpo_funcion '}'  (46)
	lista_params_formales : lista_params_formales . ',' param_formal  (48)

	','  shift 106
	')'  shift 107
	.  error


state 86
	lista_params_formales : param_formal .  (47)

	.  reduce 47


state 87
	param_formal : sem_pasaje_opt . INT ID  (49)

	INT  shift 108
	.  error


state 88
	bloque_for : FOR '(' ID FROM . CTE TO CTE ')' rama_for ';'  (69)

	CTE  shift 109
	.  error


state 89
	parametro_real : TRUNC '(' . expresion ')'  (43)

	ID  shift 10
	CTE  shift 42
	.  error

	llamada_funcion  goto 43
	var_ref  goto 44
	expresion  goto 110
	cte  goto 46
	termino  goto 47
	factor  goto 48


state 90
	lambda_expr : '(' INT . ID ')' '{' bloque_ejec '}' '(' argumento ')'  (74)

	ID  shift 111
	.  error


state 91
	llamada_funcion : ID '(' lista_params_reales_opt ')' .  (36)

	.  reduce 36


state 92
	lista_params_reales : lista_params_reales ',' . param_real_map  (40)

	TRUNC  shift 56
	ID  shift 10
	CTE  shift 42
	'('  shift 57
	.  error

	llamada_funcion  goto 43
	var_ref  goto 44
	expresion  goto 58
	cte  goto 46
	termino  goto 47
	factor  goto 48
	param_real_map  goto 112
	parametro_real  goto 62
	lambda_expr  goto 63


state 93
	param_real_map : parametro_real "->" . ID  (41)

	ID  shift 113
	.  error


state 94
	lista_ctes : lista_ctes ',' . cte  (25)

	CTE  shift 42
	.  error

	cte  goto 114


state 95
	expresion : expresion '+' termino .  (27)
	termino : termino . '*' factor  (30)
	termino : termino . '/' factor  (31)

	'*'  shift 78
	'/'  shift 79
	IGUAL  reduce 27
	DISTINTO  reduce 27
	MENORIGUAL  reduce 27
	MAYORIGUAL  reduce 27
	'+'  reduce 27
	'-'  reduce 27
	';'  reduce 27
	')'  reduce 27
	"->"  reduce 27
	'<'  reduce 27
	'>'  reduce 27


state 96
	expresion : expresion '-' termino .  (28)
	termino : termino . '*' factor  (30)
	termino : termino . '/' factor  (31)

	'*'  shift 78
	'/'  shift 79
	IGUAL  reduce 28
	DISTINTO  reduce 28
	MENORIGUAL  reduce 28
	MAYORIGUAL  reduce 28
	'+'  reduce 28
	'-'  reduce 28
	';'  reduce 28
	')'  reduce 28
	"->"  reduce 28
	'<'  reduce 28
	'>'  reduce 28


state 97
	expresion : expresion . '+' termino  (27)
	expresion : expresion . '-' termino  (28)
	condicion : expresion relop expresion .  (58)

	'+'  shift 73
	'-'  shift 74
	')'  reduce 58


state 98
	termino : termino '*' factor .  (30)

	.  reduce 30


state 99
	termino : termino '/' factor .  (31)

	.  reduce 31


state 100
	rama_if : '{' . bloque_ejec '}'  (66)
	bloque_ejec : .  (4)

	.  reduce 4

	bloque_ejec  goto 115


state 101
	rama_if : sentencia_ejec .  (65)

	.  reduce 65


state 102
	bloque_if : IF '(' condicion ')' rama_if . opt_else ENDIF ';'  (57)
	opt_else : .  (67)

	ELSE  shift 116
	ENDIF  reduce 67

	opt_else  goto 117


state 103
	print_sent : PRINT '(' CADENA ')' ';' .  (72)

	.  reduce 72


state 104
	print_sent : PRINT '(' expresion ')' ';' .  (73)

	.  reduce 73


state 105
	return_sent : RETURN '(' expresion ')' ';' .  (45)

	.  reduce 45


state 106
	lista_params_formales : lista_params_formales ',' . param_formal  (48)
	sem_pasaje_opt : .  (50)

	CV  shift 84
	INT  reduce 50

	param_formal  goto 118
	sem_pasaje_opt  goto 87


state 107
	funcion : INT ID '(' lista_params_formales ')' . '{' cuerpo_funcion '}'  (46)

	'{'  shift 119
	.  error


state 108
	param_formal : sem_pasaje_opt INT . ID  (49)

	ID  shift 120
	.  error


state 109
	bloque_for : FOR '(' ID FROM CTE . TO CTE ')' rama_for ';'  (69)

	TO  shift 121
	.  error


state 110
	expresion : expresion . '+' termino  (27)
	expresion : expresion . '-' termino  (28)
	parametro_real : TRUNC '(' expresion . ')'  (43)

	'+'  shift 73
	'-'  shift 74
	')'  shift 122
	.  error


state 111
	lambda_expr : '(' INT ID . ')' '{' bloque_ejec '}' '(' argumento ')'  (74)

	')'  shift 123
	.  error


state 112
	lista_params_reales : lista_params_reales ',' param_real_map .  (40)

	.  reduce 40


state 113
	param_real_map : parametro_real "->" ID .  (41)

	.  reduce 41


state 114
	lista_ctes : lista_ctes ',' cte .  (25)

	.  reduce 25


state 115
	bloque_ejec : bloque_ejec . sentencia_ejec  (5)
	rama_if : '{' bloque_ejec . '}'  (66)

	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	FOR  shift 9
	ID  shift 10
	'}'  shift 124
	.  error

	sentencia_ejec  goto 125
	asign_simple  goto 17
	asign_multiple  goto 18
	bloque_if  goto 19
	bloque_for  goto 20
	print_sent  goto 21
	llamada_funcion  goto 22
	return_sent  goto 23
	lista_ids  goto 24
	var_ref  goto 25


state 116
	opt_else : ELSE . rama_if  (68)

	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	FOR  shift 9
	ID  shift 10
	'{'  shift 100
	.  error

	sentencia_ejec  goto 101
	asign_simple  goto 17
	asign_multiple  goto 18
	bloque_if  goto 19
	bloque_for  goto 20
	print_sent  goto 21
	llamada_funcion  goto 22
	return_sent  goto 23
	lista_ids  goto 24
	var_ref  goto 25
	rama_if  goto 126


state 117
	bloque_if : IF '(' condicion ')' rama_if opt_else . ENDIF ';'  (57)

	ENDIF  shift 127
	.  error


state 118
	lista_params_formales : lista_params_formales ',' param_formal .  (48)

	.  reduce 48


state 119
	funcion : INT ID '(' lista_params_formales ')' '{' . cuerpo_funcion '}'  (46)
	cuerpo_funcion_items : .  (53)

	.  reduce 53

	cuerpo_funcion  goto 128
	cuerpo_funcion_items  goto 129


state 120
	param_formal : sem_pasaje_opt INT ID .  (49)

	.  reduce 49


state 121
	bloque_for : FOR '(' ID FROM CTE TO . CTE ')' rama_for ';'  (69)

	CTE  shift 130
	.  error


state 122
	parametro_real : TRUNC '(' expresion ')' .  (43)

	.  reduce 43


state 123
	lambda_expr : '(' INT ID ')' . '{' bloque_ejec '}' '(' argumento ')'  (74)

	'{'  shift 131
	.  error


state 124
	rama_if : '{' bloque_ejec '}' .  (66)

	.  reduce 66


state 125
	bloque_ejec : bloque_ejec sentencia_ejec .  (5)

	.  reduce 5


state 126
	opt_else : ELSE rama_if .  (68)

	.  reduce 68


state 127
	bloque_if : IF '(' condicion ')' rama_if opt_else ENDIF . ';'  (57)

	';'  shift 132
	.  error


state 128
	funcion : INT ID '(' lista_params_formales ')' '{' cuerpo_funcion . '}'  (46)

	'}'  shift 133
	.  error


state 129
	cuerpo_funcion : cuerpo_funcion_items .  (52)
	cuerpo_funcion_items : cuerpo_funcion_items . cuerpo_item  (54)

	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	INT  shift 134
	FOR  shift 9
	ID  shift 10
	'}'  reduce 52

	sentencia_ejec  goto 135
	sentencia_decl  goto 136
	declaracion  goto 16
	asign_simple  goto 17
	asign_multiple  goto 18
	bloque_if  goto 19
	bloque_for  goto 20
	print_sent  goto 21
	llamada_funcion  goto 22
	return_sent  goto 23
	lista_ids  goto 24
	var_ref  goto 25
	cuerpo_item  goto 137


state 130
	bloque_for : FOR '(' ID FROM CTE TO CTE . ')' rama_for ';'  (69)

	')'  shift 138
	.  error


state 131
	lambda_expr : '(' INT ID ')' '{' . bloque_ejec '}' '(' argumento ')'  (74)
	bloque_ejec : .  (4)

	.  reduce 4

	bloque_ejec  goto 139


state 132
	bloque_if : IF '(' condicion ')' rama_if opt_else ENDIF ';' .  (57)

	.  reduce 57


state 133
	funcion : INT ID '(' lista_params_formales ')' '{' cuerpo_funcion '}' .  (46)

	.  reduce 46


state 134
	declaracion : INT . lista_ids  (17)

	ID  shift 64
	.  error

	lista_ids  goto 30
	var_ref  goto 31


state 135
	cuerpo_item : sentencia_ejec .  (56)

	.  reduce 56


state 136
	cuerpo_item : sentencia_decl .  (55)

	.  reduce 55


state 137
	cuerpo_funcion_items : cuerpo_funcion_items cuerpo_item .  (54)

	.  reduce 54


state 138
	bloque_for : FOR '(' ID FROM CTE TO CTE ')' . rama_for ';'  (69)

	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	FOR  shift 9
	ID  shift 10
	'{'  shift 140
	.  error

	sentencia_ejec  goto 141
	asign_simple  goto 17
	asign_multiple  goto 18
	bloque_if  goto 19
	bloque_for  goto 20
	print_sent  goto 21
	llamada_funcion  goto 22
	return_sent  goto 23
	lista_ids  goto 24
	var_ref  goto 25
	rama_for  goto 142


state 139
	bloque_ejec : bloque_ejec . sentencia_ejec  (5)
	lambda_expr : '(' INT ID ')' '{' bloque_ejec . '}' '(' argumento ')'  (74)

	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	FOR  shift 9
	ID  shift 10
	'}'  shift 143
	.  error

	sentencia_ejec  goto 125
	asign_simple  goto 17
	asign_multiple  goto 18
	bloque_if  goto 19
	bloque_for  goto 20
	print_sent  goto 21
	llamada_funcion  goto 22
	return_sent  goto 23
	lista_ids  goto 24
	var_ref  goto 25


state 140
	rama_for : '{' . bloque_ejec '}'  (71)
	bloque_ejec : .  (4)

	.  reduce 4

	bloque_ejec  goto 144


state 141
	rama_for : sentencia_ejec .  (70)

	.  reduce 70


state 142
	bloque_for : FOR '(' ID FROM CTE TO CTE ')' rama_for . ';'  (69)

	';'  shift 145
	.  error


state 143
	lambda_expr : '(' INT ID ')' '{' bloque_ejec '}' . '(' argumento ')'  (74)

	'('  shift 146
	.  error


state 144
	bloque_ejec : bloque_ejec . sentencia_ejec  (5)
	rama_for : '{' bloque_ejec . '}'  (71)

	IF  shift 5
	PRINT  shift 6
	RETURN  shift 7
	FOR  shift 9
	ID  shift 10
	'}'  shift 147
	.  error

	sentencia_ejec  goto 125
	asign_simple  goto 17
	asign_multiple  goto 18
	bloque_if  goto 19
	bloque_for  goto 20
	print_sent  goto 21
	llamada_funcion  goto 22
	return_sent  goto 23
	lista_ids  goto 24
	var_ref  goto 25


state 145
	bloque_for : FOR '(' ID FROM CTE TO CTE ')' rama_for ';' .  (69)

	.  reduce 69


state 146
	lambda_expr : '(' INT ID ')' '{' bloque_ejec '}' '(' . argumento ')'  (74)

	ID  shift 148
	CTE  shift 149
	.  error

	argumento  goto 150


state 147
	rama_for : '{' bloque_ejec '}' .  (71)

	.  reduce 71


state 148
	argumento : ID .  (75)

	.  reduce 75


state 149
	argumento : CTE .  (76)

	.  reduce 76


state 150
	lambda_expr : '(' INT ID ')' '{' bloque_ejec '}' '(' argumento . ')'  (74)

	')'  shift 151
	.  error


state 151
	lambda_expr : '(' INT ID ')' '{' bloque_ejec '}' '(' argumento ')' .  (74)

	.  reduce 74


40 terminals, 40 nonterminals
77 grammar rules, 152 states
